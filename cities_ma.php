<?php

$run_environment = 'dev'; // either 'dev' or 'prod'
$max_records = 4; // only used for testing

if ($run_environment == 'dev') {
	error_reporting(E_ALL); 	
    require 'scraperwiki.php';
	ini_set("memory_limit","500M");

	$xls_file_path = '/Users/philipashlock/Sites/test.dev/dmap-scrapers/tmp/city_ma.xls';

}

if ($run_environment == 'prod') {
	$xls_file_path = '/tmp/city_ma.xls';		
}


require 'scraperwiki/simple_html_dom.php';


/// -------------------------------- First download the file --------------------------------

$post_url = "https://dlsgateway.dor.state.ma.us/gateway/Public/WebForms/Directory/AdvancedSearch.aspx";

$fields = '__VIEWSTATE=%%2FAkACQQJCAkMCRAJFAkYCRwJIAkkCSgJLAkwCTQJOAk8CUAJRAlICUwJUAlUCVgJXAlgCWQJaAlsCXAJdAl4CXwJgAmECYgJjAmQCZQJmAmcCaAJpAmoCawJsAm0CbgJvAnACcQJyAnMCdAJ1AnYCdwJ4AnkCegJ7AnwCfQJ%2BAn8CgAECgQECggECgwEChAEChQEChgEChwECiAECiQECigECiwECjAECjQECjgECjwECkAECkQECkgECkwEClAEClQEClgEClwECmAECmQECmgECmwECnAECnQECngECnwECoAECoQECogECowECpAECpQECpgECpwECqAECqQECqgECqwECrAECrQECrgECrwECsAECsQECsgECswECtAECtQECtgECtwECuAECuQECugECuwECvAECvQECvgECvwECwAECwQECwgECwwECxAECxQECxgECxwECyAECyQECygECywECzAECzQECzgECzwEC0AEC0QEC0gEC0wEC1AEC1QEC1gEC1wEC2AEC2QEC2gEC2wEC3AEC3QEC3gEC3wEC4AEC4QEC4gEC4wEC5AEC5QEC5gEC5wEC6AEC6QEC6gEC6wEC7AEC7QEC7gEC7wEC8AEC8QEC8gEC8wEC9AEC9QEC9gEC9wEC%2BAEC%2BQEC%2BgEC%2BwEC%2FAEC%2FQEC%2FgEC%2FwECgAICgQICggICgwIChAIChQIChgIChwICiAICiQICigICiwICjAICjQICjgICjwICkAICkQICkgICkwIClAIClQIClgIClwICmAICmQICmgICmwICnAICnQICngICnwICoAICoQICogICowICpAICpQICpgICpwICqAICqQICqgICqwICrAICrQICrgICrwICsAICsQICsgICswICtAICtQICtgICtwICuAICuQICugICuwICvAICvQICvgICvwICwAICwQICwgICwwICxAICxQICxgICxwICyAICyQICygICywICzAICzQICzgICzwIC0AIC0QIC0gIC0wIC1AIC1QIC1gIC1wIC2AIC2QIC2gIC2wIC3AIC3QIC3gIC3wIC4AIC4QIC4gIC4wIC5AIC5QIC5gIC5wIC6AIC6QIC6gIC6wIC7AIC7QIC7gIC7wIC8AIC8QIC8gIC8wIC9AIC9QIC9gIC9wIC%2BAIC%2BQIC%2BgIC%2BwIC%2FAIC%2FQIC%2FgIC%2FwICgAMCgQMCggMCgwMChAMChQMChgMChwMCiAMCiQMCigMCiwMCjAMCjQMCjgMCjwMCkAMCkQMCkgMCkwMClAMClQMClgMClwMCmAMCmQMCmgMCmwMCnAMCnQMCngMCnwMCoAMCoQMCogMCowMCpAMCpQMCpgMCpwMCqAMCqQMCqgMCqwMCrAMCrQMCrgMCrwMCsAMCsQMCsgMCswMCtAMCtQMCtgMCtwMCuAMCuQMCugMCuwMCvAMCvQMCvgMCvwMCwAMCwQMCwgMCwwMCxAMCxQMCxgMCxwMCyAMCyQMCygMCywMCzAMCzQMCzgMCzwMC0AMC0QMC0gMC0wMC1AMC1QMC1gMC1wMC2AMC2QMC2gMC2wMC3AMC3QMC3gMC3wMC4AMC4QMC4gMC4wMC5AMC5QMC5gMC5wMC6AMC6QMC6gMC6wMC7AMC7QMC7gMC7wMC8AMC8QMC8gMC8wMC9AMC9QMC9gMC9wMC%2BAMC%2BQMC%2BgMC%2BwMC%2FAMC%2FQMC%2FgMC%2FwMCgAQCgQQCggQCgwQChAQChQQChgQChwQCiAQCiQQCigQCiwQCjAQCjQQCjgQCjwQCkAQCkQQCkgQCkwQClAQClQQClgQClwQCmAQCmQQCmgQCmwQCnAQCnQQCngQCnwQCoAQCoQQCogQCowQCpAQCpQQCpgQCpwQCqAQCqQQCqgQCqwQCrAQCrQQCrgQCrwQCsAQCsQQCsgQCswQCtAQCtQQCtgQCtwQCuAQCuQQCugQCuwQCvAQCvQQCvgQCvwQCwAQCwQQCwgQCwwQCxAQCxQQCxgQCxwQCyAQCyQQCygQCywQCzAQCzQQCzgQCzwQC0AQC0QQC0gQC0wQC1AQC1QQC1gQC1wQC2AQC2QQC2gQC2wQC3AQC3QQC3gQC3wQC4AQC4QQC4gQC4wQC5AQC5QQC5gQC5wQC6AQC6QQC6gQC6wQC7AQC7QQC7gQC7wQC8AQC8QQC8gQC8wQC9AQC9QQC9gQC9wQC%2BAQC%2BQQC%2BgQC%2BwQC%2FAQC%2FQQC%2FgQC%%3D&__EVENTVALIDATION=%2FwEWmgUCmaP6hA4C9cDyhwUCoLjzpgwCha%2BRjQYCnsa%2BEALz%2FNzmDQLUk%2FrNBwKpipjQAQKCoYanCwK3y8b5AwKI4uTMDQLw%2FNzmDQLPgdHTAgKguP%2BmDAKFr52NBgKexroQAvP82OYNAtSTxs0HAqmK5NABAoKhgqcLArfLwvkDAoji4MwNAs%2BB3dMCAqC4%2B6YMAoWvmY0GAp7GhhAC8%2Fyk5w0C1JPCzQcCqYrg0AECgqGOpwsCt8vO%2BQMCiOLszA0Cz4HZ0wICoLjHpgwCha%2FljQYCnsaCEALz%2FKDnDQLUk87NBwKpiuzQAQKCoYqnCwK3y8r5AwKI4ujMDQLPgaXQAgKguMOmDAKFr%2BGNBgKexo4QAvP8rOcNAtSTys0HAqmK6NABAoKhlqcLArfL1vkDAoji9MwNAs%2BBodACAqC4z6YMAoWv7Y0GAp7GihAC8%2Fyo5w0C1JPWzQcCqYr00AECgqGSpwsCt8vS%2BQMCiOLwzA0Cz4Gt0AICoLjLpgwCha%2FpjQYCnsaWEALz%2FLTnDQLUk9LNBwKpivDQAQKCoZ6nCwK3y975AwKI4vzMDQLPganQAgKguNemDAKFr%2FWNBgKexpIQAvP8sOcNAtST3s0HAteBpdACAqmK%2FNABAoKhmqcLArfL2vkDAoji%2BMwNAs%2BB9dMCAqC4k6YMAoWvsY0GAp7G3hMC8%2Fz85g0C1JOazQcCqYq40AECgqGmpwsCt8vm%2BQMCiOKEzA0Cz4Hx0wICoLifpgwCha%2B9jQYCnsbaEwLz%2FPjmDQLUk%2BbNBwKpioTQAQKCoaKnCwK3y%2BL5AwKI4oDMDQLMgdXTAgKhuPOmDAK6r5GNBgKfxr4QAtWT%2Bs0HAq6KmNABAoOhhqcLArTLxvkDAoni5MwNAsyB0dMCAqG4%2F6YMArqvnY0GAp%2FGuhAC8PzY5g0C1ZPGzQcCrork0AECg6GCpwsCtMvC%2BQMCieLgzA0CzIHd0wICobj7pgwCuq%2BZjQYCn8aGEALw%2FKTnDQLVk8LNBwKuiuDQAQKDoY6nCwK0y875AwKJ4uzMDQLMgdnTAgKhuMemDAK6r%2BWNBgKfxoIQAvD8oOcNAtWTzs0HAq6K7NABAoOhiqcLArTLyvkDAoni6MwNAsyBpdACAqG4w6YMArqv4Y0GAp%2FGjhAC8Pys5w0C1ZPKzQcCroro0AECg6GWpwsCtMvW%2BQMCieL0zA0CzIGh0AICobjPpgwCuq%2FtjQYCn8aKEALw%2FKjnDQLVk9bNBwKuivTQAQKDoZKnCwK0y9L5AwKJ4vDMDQLMga3QAgKhuMumDAK6r%2BmNBgKfxpYQAvD8tOcNAtWT0s0HAq6K8NABAoOhnqcLArTL3vkDAoni%2FMwNAsyBqdACAqG416YMArqv9Y0GAp%2FGkhAC8Pyw5w0C1ZPezQcCror80AECg6GapwsCtMva%2BQMCieL4zA0CzIH10wICobiTpgwCuq%2BxjQYCn8beEwLw%2FPzmDQLVk5rNBwKuirjQAQKDoaanCwK0y%2Bb5AwKJ4oTMDQLMgfHTAgKhuJ%2BmDAK6r72NBgKfxtoTAvD8%2BOYNAtWT5s0HAq6KhNABAoOhoqcLArTL4vkDAonigMwNAs2B1dMCAqa486YMAruvkY0GApzGvhAC8fzc5g0CypP6zQcCr4qY0AECgKGGpwsCtcvG%2BQMCjuLkzA0CzYHR0wICprj%2FpgwCu6%2BdjQYCnMa6EALx%2FNjmDQLKk8bNBwKviuTQAQKAoYKnCwK1y8L5AwKO4uDMDQLNgd3TAgKmuPumDAK7r5mNBgKcxoYQAvH8pOcNAsqTws0HAq%2BK4NABAoChjqcLArXLzvkDAo7i7MwNAs2B2dMCAqa4x6YMAruv5Y0GApzGghAC8fyg5w0CypPOzQcCr4rs0AECgKGKpwsCtcvK%2BQMCjuLozA0CzYGl0AICprjDpgwCu6%2FhjQYCnMaOEALx%2FKznDQLKk8rNBwKviujQAQKAoZanCwK1y9b5AwKO4vTMDQLNgaHQAgKmuM%2BmDAK7r%2B2NBgKcxooQAvH8qOcNAsqT1s0HAq%2BK9NABAoChkqcLArXL0vkDAo7i8MwNAs2BrdACAqa4y6YMAruv6Y0GApzGlhAC8fy05w0CypPSzQcCr4rw0AECgKGepwsCtcve%2BQMCjuL8zA0CzYGp0AICprjXpgwCu6%2F1jQYCnMaSEALx%2FLDnDQLKk97NBwLck87NBwKvivzQAQKAoZqnCwK1y9r5AwKO4vjMDQLNgfXTAgKmuJOmDAK7r7GNBgKcxt4TAvH8%2FOYNAsqTms0HAq%2BKuNABAoChpqcLArXL5vkDAo7ihMwNAs2B8dMCAqa4n6YMAruvvY0GApzG2hMC8fz45g0CypPmzQcCr4qE0AECgKGipwsCtcvi%2BQMCjuKAzA0CwoHV0wICp7jzpgwCuK%2BRjQYCnca%2BEAL2%2FNzmDQLLk%2FrNBwKsipjQAQKBoYanCwKqy8b5AwKP4uTMDQLCgdHTAgKnuP%2BmDAK4r52NBgKdxroQAvb82OYNAsuTxs0HAqyK5NABAoGhgqcLAqrLwvkDAo%2Fi4MwNAsKB3dMCAqe4%2B6YMArivmY0GAp3GhhAC9vyk5w0Cy5PCzQcCrIrg0AECgaGOpwsCqsvO%2BQMCj%2BLszA0CwoHZ0wICp7jHpgwCuK%2FljQYCncaCEAL2%2FKDnDQLLk87NBwKsiuzQAQKBoYqnCwKqy8r5AwKP4ujMDQLCgaXQAgKnuMOmDAK4r%2BGNBgKdxo4QAvb8rOcNAsuTys0HAqyK6NABAoGhlqcLAqrL1vkDAo%2Fi9MwNAsKBodACAqe4z6YMAuWmyeENAvDK5KkBAr2l%2B6MCAvP2vskJAs6ZwOMDAqmA4v4FAoSrhIkPAq%2FBxNcHAoro5uIJAseLu%2F4GAqKy3YgIAr2l%2F6MCApjMgL4EAvP2oskJAs6ZxOMDAsCA3s4KAv%2BPztQDAq73z%2FUKArPgrV4C%2FrOYtAsCmImCwwYCtOClXgL9s%2BC1CwLKzpmDBALC3MaeAQKnxaSDBwKM7rr0DQKhhPqqBQKGrdifCwLJzu2ABAKv9%2F%2F1CgKu98P1CgLKzp2DBAKz4KFeApiJhsMGAq%2F3%2B%2FUKAsLc%2Bp4BAv6zlLQLAv2z5LULAqfF2IMHAozuvvQNAqGE%2FqoFAoat3J8LAsPc%2Fp4BAsnO4YAEArTg3V4CrvfH9QoCs%2BClXgKYibrDBgL9s5i0CwLC3P6eAQKnxdyDBwKM7rL0DQKhhPKqBQKGrdCfCwLJzuWABAKu9%2Fv1CgKz4NleApiJvsMGAv2znLQLAsLc8p4BApmJssMGAqfF0IMHAqjF3IMHAv6zkLQLAozutvQNAqGE9qoFAoat1J8LAsnOmYMEAq73%2F%2FUKArPg3V4Cw9z2ngECtODZXgKYibLDBgL9s5C0CwKoxdSDBwLC3PaeAQKnxdSDBwKM7qr0DQKhhOqqBQKGrcifCwLJzp2DBAKu9%2FP1CgKihPaqBQKz4NFeApiJtsMGAv2zlLQLAsLc6p4BAo3urvQNAqGE7qoFAoet1J8LAqKE7qoFAsnOkYMEAq739%2FUKArPg1V4C%2FbOItAsCmImqwwYCwtzungECyc6VgwQCp8XMgwcCjO6i9A0CoYTiqgUCje6y9A0Chq3AnwsCr%2Ffz9QoCrvfr9QoCooTyqgUCs%2BDJXgKHrdCfCwKYia7DBgL9s4y0CwLC3OKeAQKN7qr0DQKnxcCDBwKihOqqBQKM7qb0DQKhhOaqBQKGrcSfCwLJzsmABAKu96%2F1CgLKzuWABAKz4I1eApiJ4sAGAv2zwLULAsLcpp4BAsPc6p4BAqfFhIMHAo3utvQNAozumvQNAqGE2qoFAoatuJ8LAsnOzYAEArPggV4CmInmwAYC%2FbPEtQsCrvej9QoCqMXQgwcCp8W4gwcCjO6e9A0CoYTeqgUChq28nwsCys7pgAQCr%2FfP9QoCtOCtXgKZiYLDBgL%2Bs%2BC1CwLD3MaeAQKoxaSDBwKN7rr0DQKihPqqBQKHrdifCwLKzu2ABAKHrcifCwKv98P1CgK04NFeArTgoV4CmYmGwwYC%2FrPktQsCw9z6ngECptCRXgKx1L%2B%2FCAK%2F6OVfAuysjp4BAp%2Bsvp4BAvi73LULAuys0p4BAtXS86gNAq7okV4CgpXk6A8Ci4e39QoC7KzengEC556p6AwCotHDqA0C9Z656AwC9Z716AwC5J7V6AwCwbXLnwYCi4ef9QoC6t%2BLwQ4Cx%2FapdALOtd%2BfBgLOteufBgLJu7i1CwKClZzrDwKTlZzrDwKfrJqeAQLH9rV0ApiHh%2FUKAvi70LULAvu7qLULAs61258GAvvfm8EOAsm78LULApOV7OgPAtXS96gNAtT2uXQCruiVXgKLh4v1CgLknqnoDAKClbjrDwK%2F6OFfApOVkOsPApiH1%2FUKAurfq8EOAsm7%2FLULApOV5OgPAvi7%2FLULAsm7oLULAurfj8EOAoKVkOsPAp%2Bstp4BAq7o%2BV8C%2BLvUtQsC1dLLqA0CwbXTnwYC5J716AwC%2BLu4tQsCrujpXwKLh4%2F1CgLknq3oDALBtcOfBgL736vBDgL735%2FBDgKi0ZerDQLq34PBDgLU9sl0ApOV4OgPAsf2oXQC7KyGngECybuktQsCotHbqA0C7d%2BvwQ4Cv%2Bj5XwKfrIqeAQKYh5%2F1CgK%2F6LVeAvi7qLULAsm7rLULAvWevegMAtXSz6gNAp%2Bs3p4BAq7o7V8C7KyyngECi4eD9QoC5J6h6AwC9Z6l6AwCzrXTnwYCwbXHnwYC6t%2BHwQ4Cx%2FaldALknrHoDAKi0ceoDQLBteufBgKTlZTrDwLU9rF0AoKV6OgPAtXSk6sNAvvfk8EOAp%2Bsjp4BAvi7rLULAtXSw6gNAq7osV4Ci4eH9QoC1dLfqA0C5J6l6AwCmIer9QoCwbXbnwYC7KyangECx%2Fa5dAKClezoDwKClZTrDwK%2F6P1fAqLR36gNAtT2vXQCv%2BixXgKYh5P1CgKYh5v1CgLsrIKeAQKTlbzrDwL1nrHoDAKfrIKeAQL4u6C1CwKi0ZOrDQKClbzrDwLOtdefBgLq35fBDgLV0seoDQL735fBDgKu6OVfAouHm%2FUKAvi7pLULAuSevegMAuSeuegMAtT2tXQCwbXfnwYCi4fX9QoC1dLbqA0Cx%2FbJdAKTlbjrDwLq35%2FBDgLH9r10Ap%2Bshp4BAq7o%2FV8ClpjA%2FwUCjPKsqAkCwcvLgA0CjP2O0gkCkurZzAgClqfE1wMCmMjtyA0ClfOpnAaL1pfP%2B1GvFZUNQByZR3qhSnhCNg%3D%3D&_ctl0%3ALeftColumnContent%3Am_quickSearch%3Am_ddlCityTown=0&_ctl0%3ALeftColumnContent%3Am_quickSearch%3Am_ddlCounty=0&_ctl0%3ALeftColumnContent%3Am_quickSearch%3Am_ddlUtilityDistrict=0&_ctl0%3ALeftColumnContent%3Am_quickSearch%3Am_ddlSchoolDistrict=0&SetOptionsMenu_IsExpanded=&_ctl0%3AMainContent%3Am_btnExport=Export+List';

// Save file
file_put_contents($xls_file_path, get_post_response($post_url,$fields));

// ------------------------------------------------------------------------------------------



if ($run_environment == 'prod') {
    get_rep_data($xls_file_path);
    //save_records($xls_file_path);

}
else {
    $alldata  = get_rep_data($xls_file_path);
}


// if testing
if ($run_environment == 'dev') {
    header('Content-type: application/json');
    print json_encode($alldata);
}


function get_post_response($url,$fields_string) {
	
	//open connection
	$ch = curl_init();

	//set the url, number of POST vars, POST data
	curl_setopt($ch,CURLOPT_URL, $url);
	curl_setopt($ch,CURLOPT_RETURNTRANSFER, true);		
	curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);

	//execute post
	$result = curl_exec($ch);

	//close connection
	curl_close($ch);
	
	return $result;
		
}





function get_rep_data($file_path) {
    
    global $run_environment;
    global $max_records;

	
	// THIS DOESNT WORK!		
	// $html = file_get_contents($file_path);
    // $dom = new simple_html_dom();
    // $dom->load($html);	
	// $table = $dom->find("tr", 0);
	// echo $table->plaintext;	
	
	
	// THIS WORKS!	
	
	$html = file_get_contents($file_path);	
	$dom = new domDocument;   
	$dom->loadHTML($html);


	$rowcount = 1;
	foreach ($dom->getElementsByTagName("tr") as $result) {
	
		$column_count = 0;
		
		$cell = null;
		foreach ($result->childNodes as $row) {
			
			$value = null;
			$value = trim(utf8_decode($row->nodeValue));
			
			// If this is the first row
			if($rowcount == 1) {
				if($value) {
					$headings[] = strtolower(str_replace(' ', '_', $value));
				}
			}
			
			if($rowcount > 1) {
				if($value) {
					$columns[$headings[$column_count]] = $value;				
				}
			}
			
			
			$column_count++;
		}
		
		
		// If this is the first row
		if($rowcount == 1) {		
			$rowcount++;
			continue;
		}		

	    if ($run_environment == 'dev') {
	        $reps[] = $columns;
	    }
	    else {
	        scraperwiki::save_sqlite(array('jurisdiction','last_name', 'first_name'), $columns);    
	    }		

		$rowcount++;
		if ($run_environment == 'dev' && $rowcount > $max_records) break;

	}
	

    if ($run_environment == 'dev') {
        return $reps;
    }
    else {
        return true;

    }


}












?>